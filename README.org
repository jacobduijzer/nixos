#+TITLE: NixOS Installation
#+AUTHOR: Jacob Duijzer
#+STARTUP: inlineimages

* Table of Contents :TOC_4:
- [[#my-nixos-setup--configuration][My NixOS Setup & Configuration]]
  - [[#installation][Installation]]
    - [[#current-disk-partitions][Current disk partitions]]
    - [[#installation-1][Installation]]
    - [[#partitioning][Partitioning?]]
  - [[#configuration][Configuration]]
    - [[#sway][Sway]]
    - [[#zsh][ZSH]]
    - [[#backups][Backups]]
    - [[#waybar][Waybar]]
  - [[#sources][Sources]]

* My NixOS Setup & Configuration
  
** Installation

*** Current disk partitions
 #+BEGIN_SRC shell
 Disk /dev/nvme0n1: 953.87 GiB, 1024209543168 bytes, 2000409264 sectors
 Disk model: SAMSUNG MZVL21T0HCLR-00BL7
 Units: sectors of 1 * 512 = 512 bytes
 Sector size (logical/physical): 512 bytes / 512 bytes
 I/O size (minimum/optimal): 512 bytes / 512 bytes
 Disklabel type: gpt
 Disk identifier: E083BFE5-CA67-E346-975F-2676FC8BC1BB

 Device             Start        End    Sectors   Size Type
 /dev/nvme0n1p1      2048    1026047    1024000   500M EFI System
 /dev/nvme0n1p2   1026048  135243775  134217728    64G Linux swap
 /dev/nvme0n1p3 135243776 2000409230 1865165455 889.4G Linux filesystem


 Disk /dev/mapper/cryptroot: 889.36 GiB, 954947935744 bytes, 1865132687 sectors
 Units: sectors of 1 * 512 = 512 bytes
 Sector size (logical/physical): 512 bytes / 512 bytes
 I/O size (minimum/optimal): 512 bytes / 512 bytes
 #+END_SRC


*** Installation
 #+BEGIN_SRC shell
 mkfs.vfat /dev/sda1
 cryptsetup luksFormat /dev/sda2
 cryptsetup luksOpen /dev/sda2 nixos
 mkfs.ext4 /dev/mapper/nixos
 mount /dev/mapper/nixos /mnt
 mkdir /mnt/boot
 mount /dev/sda1 /mnt/boot
 nixos-generate-config --root /mnt
 vim /mnt/etc/configuration.nix # optional, but you might want to make some changes
 nixos-install
 reboot
 #+END_SRC


*** Partitioning?

    #+BEGIN_SRC shell
    sudo su # assume root
    parted /dev/sda -- mklabel gpt
    # make primary partition, leave 512Mb at the beginning (boot) and 8Gb at the end (swap) free
    parted /dev/sda -- mkpart primary 512MiB -8GiB
    # create swap partition at the end of the disk
    parted /dev/sda -- mkpart primary linux-swap -8GiB 100%
    # create boot partition at the beginning
    parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
    parted /dev/sda -- set 3 esp on
    mkfs.ext4 -L nixos /dev/sda1
    mkswap -L swap /dev/sda2
    mkfs.fat -F 32 -n boot /dev/sda3
    mount /dev/disk/by-label/nixos /mnt
    mkdir -p /mnt/boot
    mount /dev/disk/by-label/boot /mnt/boot
    swapon /dev/sda2
    nixos-generate-config --root /mnt
    vim /mnt/etc/nixos/configuration.nix
    # set the below inside the configuration.nix
    # make sure that `boot.loader.grub.*` are all commented out
    ## boot.loader.systemd-boot.enable = true;
    ## boot.loader.efi.canTouchEfiVariables = true;
    ## boot.loader.timeout = 2;
    ## nix = {
    ##    package = pkgs.nixUnstable;
    ##    extraOptions = "experimental-features = nix-command flakes";
    ## };
    ## virtualisation.virtualbox.guest.enable = true;

    # Set this for boot:
    # boot.loader.grub.device = "nodev";
    nixos-install # now, wait a while
    #+END_SRC


** Configuration

*** Sway

    Special keys for sway:

    | Keys             | Description               | Remarks                                |
    |------------------+---------------------------+----------------------------------------|
    | Mod+Shift+Excape | Lock screen               |                                        |
    | Mod+Shift+c      | Reload Sway configuration |                                        |
    | Mod+Shift+Space  | Floating toggle           | Not Full-screen, waybar still visible  |
    | Mod+Print        | Printscreen of an area    | Using grimshot + swappy                |
    | Mod+Shift+Minus  | Move window to scratchpad |                                        |
    | Mod+Ctrl+Minus   | Show scratchpad           |                                        |
    | XF86Calculator   | Play/Pause                | Toggles playing / pause for active app |

*** ZSH

    Configured with p10k. To create a new profile (the original is protected by nixos):

    #+BEGIN_SRC bash
    POWERLEVEL9K_CONFIG_FILE=p10k.zsh p10k configure
    mv p10k.zsh ~/.dotfiles/nixos/misc/p10k-theme.zsh
    #+END_SRC

    Installed plugins (more info [[https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins][here]]):
    * command-not-found
    * docker
    * docker-compose
    * dotnet
    * emacs
    * emoji
    * git
    * kubectl
    * thefuck
    * z

*** Backups

    I am using Borg to make backups of my Documents folder daily. You can find more information and the Borg docs [[https://borgbackup.readthedocs.io/en/1.0-maint/index.html][here]].

    Run the backup:

    #+BEGIN_SRC bash
    sudo systemctl start borgbackup-job-jacobs-documents.service
    #+END_SRC

    Check the backup status:

    #+BEGIN_SRC bash
    sudo systemctl status borgbackup-job-jacobs-documents.service
    #+END_SRC

    Check the backup status on the server:

    #+BEGIN_SRC bash
    borg list /home/jacob/Backups 
    #+END_SRC

*** Waybar

  

   
** Sources

   * [[https://grahamc.com/blog/erase-your-darlings/][Erase your darlings: inspiration to create an even better system]]
